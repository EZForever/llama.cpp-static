name: build

on:
  # Build file modifications
  push:
    branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

  # Daily rebuild
  schedule:
    - cron: "0 2 * * *"

  # Manual rebuild, in case of some important upstream change
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ssl: [nossl, ssl]
        avx: [noavx, avx, avx2, avx512]
        include:
          - ssl: nossl
            ssl_defines: ''
          - ssl: ssl
            ssl_defines: '-DLLAMA_SERVER_SSL=ON -DOPENSSL_USE_STATIC_LIBS'
          - avx: noavx
            avx_defines: '-DLLAMA_AVX=OFF -DLLAMA_AVX2=OFF -DLLAMA_FMA=OFF'
          - avx: avx
            avx_defines: '-DLLAMA_AVX2=OFF'
          - avx: avx2
            avx_defines: ''
          - avx: avx512
            avx_defines: '-DLLAMA_AVX512=ON'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Checkout llama.cpp
        uses: actions/checkout@v4
        with:
          repository: ggerganov/llama.cpp
          path: llama.cpp

      - name: Setup Alpine Linux
        uses: jirutka/setup-alpine@v1
        with:
          packages: build-base cmake ccache git openssl-dev openssl-libs-static

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: CMake
        run: |
          mkdir llama.cpp/build
          cd llama.cpp/build
          cmake .. -DLLAMA_NATIVE=OFF -DLLAMA_STATIC=ON -DLLAMA_BUILD_SERVER=ON -DCMAKE_BUILD_TYPE=Release ${{ matrix.ssl_defines }} ${{ matrix.avx_defines }}
          cmake --build . --config Release --target server -j ${{ steps.cpu-cores.outputs.count }}
          strip bin/server
        shell: alpine.sh {0}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-${{ matrix.ssl }}-${{ matrix.avx }}
          path: bin/server
          if-no-files-found: error

